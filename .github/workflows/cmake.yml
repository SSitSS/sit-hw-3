name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GOOGLE_TEST_DIR: googletest-609281088cfefc76f9d0ce82e1ff6c30cc3591e5
  CMAKE_BINARY_DIR: ${{github.workspace}}/bin

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Download googletest
      run: |
        mkdir ${{github.workspace}}/bin
        mkdir ${{github.workspace}}/temp
        mkdir ${{github.workspace}}/3rdparty
        mkdir ${{github.workspace}}/3rdparty/${GOOGLE_TEST_DIR}
        wget https://github.com/google/googletest/archive/609281088cfefc76f9d0ce82e1ff6c30cc3591e5.zip -O ${{github.workspace}}/temp/googletest.zip
        unzip ${{github.workspace}}/temp/googletest.zip -d ${CMAKE_BINARY_DIR}/../3rdparty/
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
